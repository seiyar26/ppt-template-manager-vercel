/**
 * Service de templates - Version production
 * Les fonctions de dÃ©mo sont dÃ©sactivÃ©es et renvoient systÃ©matiquement des erreurs
 */

// Message d'erreur standard
const DEMO_DISABLED_MESSAGE = 'Le mode dÃ©mo est dÃ©sactivÃ©. Veuillez utiliser l\'API de production.';

// Journalisation de l'erreur
const logDemoDisabled = (functionName) => {
  console.error(`ðŸš« DEMO DÃ‰SACTIVÃ‰E: La fonction ${functionName} a Ã©tÃ© appelÃ©e mais le mode dÃ©mo est dÃ©sactivÃ©.`);
};

/**
 * RÃ©cupÃ©ration de tous les templates - Mode dÃ©mo dÃ©sactivÃ©
 */
export const getAllDemoTemplates = async (categoryId = null) => {
  logDemoDisabled('getAllDemoTemplates');
  return Promise.reject(new Error(DEMO_DISABLED_MESSAGE));
};

/**
 * RÃ©cupÃ©ration d'un template par ID - Mode dÃ©mo dÃ©sactivÃ©
 */
export const getDemoTemplateById = async (id) => {
  logDemoDisabled('getDemoTemplateById');
  return Promise.reject(new Error(DEMO_DISABLED_MESSAGE));
};

/**
 * Ajout de slides Ã  un template - Mode dÃ©mo dÃ©sactivÃ©
 */
export const addDemoSlidesToTemplate = async (template) => {
  logDemoDisabled('addDemoSlidesToTemplate');
  return Promise.reject(new Error(DEMO_DISABLED_MESSAGE));
};

/**
 * RÃ©cupÃ©ration de toutes les catÃ©gories - Mode dÃ©mo dÃ©sactivÃ©
 */
export const getAllDemoCategories = async () => {
  logDemoDisabled('getAllDemoCategories');
  return Promise.reject(new Error(DEMO_DISABLED_MESSAGE));
};

/**
 * RÃ©cupÃ©ration d'une catÃ©gorie par ID - Mode dÃ©mo dÃ©sactivÃ©
 */
export const getDemoCategoryById = async (id) => {
  logDemoDisabled('getDemoCategoryById');
  return Promise.reject(new Error(DEMO_DISABLED_MESSAGE));
};

/**
 * Stockage d'un template avec ses slides - Mode dÃ©mo dÃ©sactivÃ©
 */
export const storeDemoTemplateWithSlides = async (template) => {
  logDemoDisabled('storeDemoTemplateWithSlides');
  return Promise.reject(new Error(DEMO_DISABLED_MESSAGE));
};
